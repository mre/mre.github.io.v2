extends: default.liquid
title: Talks
route: talks
---

<p>
What makes a great public speaker? He's passionate, knowledgeable, and a good storyteller. I strive to become better at all of that.
Here are some of my recent presentations.
</p>

<a href="mailto:&#109;&#097;&#116;&#116;&#104;&#105;&#097;&#115;&#045;&#101;&#110;&#100;&#108;&#101;&#114;&#064;&#103;&#109;&#120;&#046;&#110;&#101;&#116;">
<div class="button"> If you would like me to speak at your event, let's talk! </div>
</a>

<div class="talk">
<h2>Workshop: Write Your Own Shell in Rust</h2>
<img src="/img/talks/2018-shell-workshop.jpg" />
<ul>
<li class="talk_location">RustBeltRust Ann Arbor, October 2018</li>
<li class="talk_location">In collaboration with <a href="https://github.com/spastorino">Santiago Pastorino</a></li>
<li class="talk_video"><a href="https://gitlab.com/mre_/rush">Code</a>
</li>
<li class="talk_slides"><a href="https://speakerdeck.com/mre/workshop-write-your-own-shell-in-rust">Slides</a></li>
</ul>
One of the things developers use every day is a shell. It comes in many flavors, like bash, fish or zsh. Depending on your background, writing your own shell from scratch might either sound intimidating or pointless. We like to believe that it can be a fun way to gain more hands-on Rust experience. If you want to play with concepts like I/O, error handling, and syscalls, we invite you to participate in this workshop. Who knows, it could also be an opportunity to start your first mid-size Rust project!
</div>


<div class="talk">
<h2> Hyperjson &mdash; The Journey Towards Faster Safer JSON Parsing in Python Using Rust</h2>
<img src="/img/talks/2018-hyperjson.jpg" />
<ul>
<li class="talk_location">Rust Cologne, August 2018</li>
<li class="talk_video"><a href="https://www.youtube.com/watch?v=f1ln5j3aoSI">Video</a>
</li>
<li class="talk_slides"><a href="https://speakerdeck.com/mre/hyperjson-the-journey-towards-faster-safer-json-parsing-in-python-using-rust">Slides</a></li>
</ul>

During a recent Python Hackathon in Düsseldorf, Matthias somehow managed to
sneak in some Rust code while writing a fast, safe Python module for encoding
and decoding JSON. It passes (most of) the Python test suite for the json module
and was unreasonably pleasant to write. Listen carefully as he tells the story
of a little side-project that got out of hand and how Rust can help speed up
even the most boring, highly-optimized tasks like parsing file formats in the
future.
</div>

<div class="talk">
<h2>Idiomatic Rust &mdash; Writing Concise and Elegant Rust Code</h2>
<img src="/img/talks/2018-fosdem.jpg" />
<ul>
<li class="talk_location">FOSDEM, February 2018</li>
<li class="talk_video"><a href="https://www.youtube.com/watch?v=P2mooqNMxMs">Video</a>
</li>
<li class="talk_slides"><a href="https://speakerdeck.com/mre/idiomatic-rust-writing-concise-and-elegant-rust-code">Slides</a></li>
</ul>

Rust is a big language and it gets bigger every day. Many beginners ask: "What is idiomatic Rust?". This talk will highlight simple tips to make your Rust code more elegant and concise, and introduce you to my peer-reviewed collection of articles/talks/repos for writing idiomatic Rust code.
</div>


<div class="talk">
<h2>Workshop: Live Coding Like No One's Watching!</h2>
<img src="/img/talks/2017-rustbeltrust.jpg" />
<ul>
<li class="talk_location">Rust Belt Rust, October 2017</li>
</li>
</ul>
So, you’ve heard of this “Rust” last year. Still it feels a bit like self-assembly furniture: you don’t know how all the parts fit together. Watch me make a fool of myself by trying to solve some common programming tasks in Rust.<br />
Highlights: Nervous laughter, self-demeaning humor, browsing the Rust documentation for clues. I might explain a little Rust along the way.<br />
</div>

<div class="talk">
<h2>My Good Friend Rust &mdash; an introduction</h2>
<img src="/img/talks/2017-topconf.jpg" />
<ul>
<li class="talk_location">Topconf D&uuml;sseldorf, October 2017</li>
<li class="talk_slides"><a href="https://speakerdeck.com/mre/my-good-friend-rust-topconf-2017">Slides</a></li>
</li>
</ul>
Rust is more than a Systems Programming language; it's a new way of thinking about low-level code.
It has strong safety and concurrency guarantees without sacrificing performance.
It provides powerful abstractions that make Systems Programming both, easier and more fun. 
Let me show you what's in for you and why you should learn Rust, even though you might be a Web-Developer.
</div>

<div class="talk">
<h2>What's So Hard About Writing a Slack Client in Rust?</h2>
<img src="/img/talks/slack-client.jpg" />
<ul>
<li class="talk_location">Rust Usergroup Cologne, March 2017</li>
<li class="talk_video"><a href="https://www.youtube.com/watch?v=rrtJh1kz1Ms">Video</a>
</li>
<li class="talk_slides"><a href="https://speakerdeck.com/mre/whats-so-hard-about-writing-a-slack-client-in-rust">Slides</a></li>
</ul>
"I'll just write a simple API wrapper for that. Give me two hours." Does that sound oddly familiar? Don't be fooled: writing an easy to use, idiomatic abstraction layer is a lot of work - in any language. I want to tell you my story about writing a Slack client in Rust. From documentation to testing and error handling there's a lot of pitfalls to avoid and laughs to share.
</div>

<div class="talk">
<h2>Why Rust?</h2>
<img src="/img/talks/why-rust.jpg" />
<ul>
<li class="talk_location">Codemotion Amsterdam, May 2016</li>
<li class="talk_video"><a href="https://www.youtube.com/watch?v=imtejBNbm0o">Video</a></li>
<li class="talk_slides"><a href="https://speakerdeck.com/mre/why-rust">Slides</a></li>
</ul>
Rust is the new kid on the block. It's a system programming language that is blazingly fast and offers powerful high-level abstractions better known from dynamic languages like Ruby or Python. Rust offers memory safety without a Garbage Collector and makes low-level programming easier and more secure. I will give an introductory talk about Rust and show some of its nicest features. 
</div>

<div class="talk">
<h2>Rust Tooling</h2>
<img src="/img/talks/2015-tooling.jpg" />
<ul>
<li class="talk_location">Rust Cologne Meetup, October 2015</li>
<li class="talk_slides"><a href="https://speakerdeck.com/mre/rust-tooling-october-2015">Slides</a></li>
</ul>
What tools are available for Rust development?
This talk gives you an overview of ways to help you write better Rust code.
</div>

<div class="talk">
<h2>The State of PyPy</h2>
<img src="/img/talks/pypy.jpg" />
<ul>
  <li class="talk_location">Python Usergroup D&uuml;sseldorf, April 2015</li>
  <li class="talk_video"><a href="https://www.youtube.com/watch?v=YEzuUJGcPqc">Video</a></li>
  <li class="talk_slides"><a href="https://speakerdeck.com/mre/the-state-of-pypy-april-2015">Slides</a></li>
</ul>
PyPy is a relatively new implementation of Python with a focus on performance. In this talk I give an overview of PyPy and how it works internally. Also I talk a bit about PyPy STM, a new approach for parallel code execution that can take advantage of modern multi-core hardware.
</div>

<div class="talk">
You can find all my other talks on <a href="https://speakerdeck.com/mre">Speakerdeck</a>.<br />
</div>
